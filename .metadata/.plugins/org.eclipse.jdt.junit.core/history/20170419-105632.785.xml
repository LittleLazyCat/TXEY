<?xml version="1.0" encoding="UTF-8"?><testrun name="TestRecordService.getDept" project="RecordSystem" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testcase name="getDept" classname="com.txey.record.service.TestRecordService" time="0.889">
    <error>org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.txey.record.dao.mybatis.DeptMybatisDao.getDept&#13;
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.&lt;init&gt;(MapperMethod.java:196)&#13;
	at org.apache.ibatis.binding.MapperMethod.&lt;init&gt;(MapperMethod.java:44)&#13;
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:59)&#13;
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:52)&#13;
	at com.sun.proxy.$Proxy17.getDept(Unknown Source)&#13;
	at com.txey.record.dao.mybatis.DeptMybatisTemplateDao.getDept(DeptMybatisTemplateDao.java:18)&#13;
	at com.txey.record.service.TestRecordService.getDept(TestRecordService.java:98)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
  </testcase>
</testrun>
